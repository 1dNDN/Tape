/*      */ package com.corrodinggames.rts.gameFramework.g;
/*      */ 
/*      */ import com.corrodinggames.rts.gameFramework.f;
/*      */ import com.corrodinggames.rts.gameFramework.l;
/*      */ import java.io.BufferedReader;
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ class q$1
/*      */   extends s
/*      */ {
/*      */   q$1(q paramq, int paramInt, l paraml) {}
/*      */   
/*      */   void a(BufferedReader paramBufferedReader, int paramInt, String paramString) {
/*  977 */     l l1 = l.u();
/*      */ 
/*      */     
/*  980 */     String str1 = paramBufferedReader.readLine();
/*      */     
/*  982 */     if (str1 == null || !str1.contains("CORRODINGGAMES")) {
/*      */       
/*  984 */       String str = paramInt + ": Unknown header from the master server: '" + f.a(str1, 30) + "'";
/*      */       
/*  986 */       l.b("LoadFromMasterServer", str);
/*      */       
/*  988 */       this.d = str;
/*      */ 
/*      */ 
/*      */       
/*      */       try {
/*  993 */         l.d("----------- Full response ----------");
/*  994 */         l.b("LoadFromMasterServer", "line:" + str1);
/*  995 */         String str3 = "";
/*  996 */         while ((str3 = paramBufferedReader.readLine()) != null) {
/*  997 */           l.b("LoadFromMasterServer", "line:" + str3);
/*      */         }
/*      */         
/* 1000 */         l.d("------------------------------------");
/*      */       }
/* 1002 */       catch (Exception exception) {
/*      */         
/* 1004 */         exception.printStackTrace();
/*      */       } 
/*      */ 
/*      */       
/*      */       return;
/*      */     } 
/*      */     
/* 1011 */     l.b("LoadFromMasterServer", paramInt + ": Starting load");
/*      */ 
/*      */     
/* 1014 */     byte b = 0;
/*      */     
/*      */     String str2;
/* 1017 */     while ((str2 = paramBufferedReader.readLine()) != null) {
/*      */ 
/*      */       
/* 1020 */       String[] arrayOfString = str2.split(",", -1);
/*      */       
/* 1022 */       if (arrayOfString.length <= 21) {
/*      */         
/* 1024 */         l.b("LoadFromMasterServer", paramInt + ": columns.length too short at:" + arrayOfString.length);
/* 1025 */         l.b("LoadFromMasterServer", paramInt + ": short line is:" + str2);
/*      */         
/*      */         continue;
/*      */       } 
/* 1029 */       String str3 = arrayOfString[0];
/* 1030 */       String str4 = arrayOfString[1];
/* 1031 */       String str5 = arrayOfString[2];
/* 1032 */       String str6 = arrayOfString[3];
/* 1033 */       String str7 = arrayOfString[4];
/* 1034 */       String str8 = arrayOfString[5];
/* 1035 */       String str9 = arrayOfString[6];
/* 1036 */       String str10 = arrayOfString[7];
/* 1037 */       String str11 = arrayOfString[8];
/* 1038 */       String str12 = arrayOfString[9];
/* 1039 */       String str13 = arrayOfString[10];
/* 1040 */       String str14 = arrayOfString[11];
/* 1041 */       String str15 = arrayOfString[12];
/* 1042 */       String str16 = arrayOfString[13];
/*      */       
/* 1044 */       String str17 = arrayOfString[15];
/* 1045 */       String str18 = arrayOfString[16];
/*      */       
/* 1047 */       String str19 = arrayOfString[17];
/*      */       
/* 1049 */       String str20 = arrayOfString[18];
/*      */ 
/*      */       
/* 1052 */       String str21 = arrayOfString[19];
/* 1053 */       String str22 = arrayOfString[20];
/* 1054 */       String str23 = arrayOfString[21];
/*      */ 
/*      */       
/* 1057 */       String str24 = null;
/* 1058 */       String str25 = null;
/*      */       
/* 1060 */       if (str6 != null && str6.startsWith("url:") && Boolean.parseBoolean(str19)) {
/*      */         
/* 1062 */         str24 = str6.substring(4);
/*      */         
/* 1064 */         str25 = str4;
/*      */         
/* 1066 */         String str26 = str24 + ";" + str25;
/* 1067 */         String str27 = f.c(str26);
/*      */         
/* 1069 */         if (!str27.equals(str7)) {
/*      */ 
/*      */ 
/*      */           
/* 1073 */           l.d("Skipping " + str20);
/*      */           
/*      */           continue;
/*      */         } 
/*      */       } 
/*      */       
/* 1079 */       if (str20 == null || str20.trim().length() == 0)
/*      */       {
/* 1081 */         str20 = str3;
/*      */       }
/*      */ 
/*      */       
/*      */       try {
/* 1086 */         String str = str20;
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */         
/* 1092 */         synchronized (n.d)
/*      */         {
/*      */           
/* 1095 */           g g = n.b(str);
/* 1096 */           g.c = str6;
/* 1097 */           g.d = str7;
/*      */           
/* 1099 */           g.e = str24;
/*      */           
/* 1101 */           g.f = str25;
/*      */           
/* 1103 */           g.g = Integer.valueOf(str8).intValue();
/* 1104 */           g.h = Boolean.parseBoolean(str9);
/* 1105 */           g.l = Boolean.parseBoolean(str11);
/* 1106 */           g.j = str5;
/* 1107 */           g.m = str10;
/* 1108 */           g.p = str12;
/* 1109 */           g.q = str13;
/* 1110 */           g.r = str14;
/* 1111 */           g.k = str15;
/* 1112 */           g.a = Boolean.parseBoolean(str16);
/*      */           
/* 1114 */           g.s = str17;
/* 1115 */           g.t = str18;
/*      */ 
/*      */           
/* 1118 */           g.x = Boolean.parseBoolean(str21);
/*      */ 
/*      */           
/* 1121 */           if ("".equals(str22))
/*      */           {
/* 1123 */             str22 = null;
/*      */           }
/* 1125 */           g.y = str22;
/*      */           
/* 1127 */           if (!str23.trim().equals(""))
/*      */           {
/* 1129 */             g.z = Integer.valueOf(str23).intValue();
/*      */           }
/*      */ 
/*      */ 
/*      */           
/*      */           try {
/* 1135 */             g.u = Integer.parseInt(g.s);
/*      */           }
/* 1137 */           catch (NumberFormatException numberFormatException) {
/*      */             
/* 1139 */             l.b("game_player_count_int:" + numberFormatException.getMessage());
/*      */           } 
/*      */ 
/*      */           
/*      */           try {
/* 1144 */             g.v = Integer.parseInt(g.t);
/*      */           }
/* 1146 */           catch (NumberFormatException numberFormatException) {
/*      */             
/* 1148 */             l.b("game_max_player_count_int:" + numberFormatException.getMessage());
/*      */           } 
/*      */           
/* 1151 */           g.w = Boolean.parseBoolean(str19);
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */           
/* 1169 */           if (g.o < this.a)
/*      */           {
/* 1171 */             g.o = this.a;
/*      */           }
/*      */           
/* 1174 */           if (n.a(g.b) == null)
/*      */           {
/* 1176 */             l1.bF.bm.add(g);
/*      */           }
/* 1178 */           b++;
/*      */ 
/*      */         
/*      */         }
/*      */ 
/*      */ 
/*      */       
/*      */       }
/* 1186 */       catch (NumberFormatException numberFormatException) {
/*      */         
/* 1188 */         l.b("LoadFromMasterServer", paramInt + ": failed to load server");
/* 1189 */         numberFormatException.printStackTrace();
/*      */       } 
/*      */     } 
/*      */ 
/*      */     
/* 1194 */     l.b("LoadFromMasterServer", "[" + paramInt + "]: Found " + b + " servers");
/*      */ 
/*      */     
/* 1197 */     if (b == 0) {
/*      */       
/*      */       try {
/*      */ 
/*      */         
/* 1202 */         Thread.sleep(2000L);
/*      */       }
/* 1204 */       catch (InterruptedException interruptedException) {
/*      */         
/* 1206 */         interruptedException.printStackTrace();
/*      */       } 
/*      */     }
/*      */ 
/*      */ 
/*      */ 
/*      */     
/* 1213 */     this.e = true;
/*      */     
/* 1215 */     this.c.a.run();
/*      */ 
/*      */ 
/*      */     
/*      */     try {
/* 1220 */       Thread.sleep(2000L);
/*      */     }
/* 1222 */     catch (InterruptedException interruptedException) {
/*      */       
/* 1224 */       interruptedException.printStackTrace();
/*      */     } 
/*      */ 
/*      */     
/* 1228 */     n.a(this.a, paramInt);
/*      */     
/* 1230 */     l.b("LoadFromMasterServer", paramInt + ": Completed load from master server without error");
/*      */   }
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   void a() {
/* 1238 */     if (!this.e) {
/*      */ 
/*      */       
/* 1241 */       this.b.bF.bl = this.d;
/*      */       
/* 1243 */       this.c.a.run();
/*      */     } 
/*      */   }
/*      */ }


/* Location:              D:\Rusted Warfare\Rusted Warfare\game-lib.jar!\com\corrodinggames\rts\gameFramework\g\q$1.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */