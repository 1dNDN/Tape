/*      */ package com.corrodinggames.rts.gameFramework;
/*      */ 
/*      */ import java.io.IOException;
/*      */ import java.util.concurrent.ConcurrentLinkedQueue;
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ class bb
/*      */   implements Runnable
/*      */ {
/*      */   volatile boolean a = true;
/*      */   volatile int b;
/*      */   int c;
/*      */   int d;
/*      */   int e;
/*      */   int f;
/*      */   int g;
/*      */   boolean h = false;
/*  848 */   public ConcurrentLinkedQueue i = new ConcurrentLinkedQueue();
/*      */ 
/*      */   
/*  851 */   public long j = 0L;
/*      */ 
/*      */   
/*      */   public synchronized strictfp void a(bd parambd) {
/*  855 */     if (this.h)
/*      */     {
/*  857 */       l.d("Replay:addCommand skipped due to stopped recording");
/*      */     }
/*      */ 
/*      */ 
/*      */     
/*  862 */     this.i.add(parambd);
/*      */     
/*  864 */     this.f = parambd.a;
/*      */     
/*  866 */     if (parambd.e != null)
/*      */     {
/*  868 */       this.k.y++;
/*      */     }
/*      */     
/*  871 */     if (parambd.f != null)
/*      */     {
/*  873 */       this.k.z++;
/*      */     }
/*      */     
/*  876 */     notifyAll();
/*      */   }
/*      */   strictfp bb(ba paramba) {}
/*      */   
/*      */   public synchronized strictfp void a() {
/*  881 */     this.a = false;
/*      */ 
/*      */     
/*  884 */     l l = l.u();
/*      */     
/*  886 */     ba.a("stop requested at:" + l.bg);
/*      */ 
/*      */     
/*  889 */     if (!ba.a(this.k))
/*      */     {
/*  891 */       ba.a("Replay stop: warning: active==false");
/*      */     }
/*      */     
/*  894 */     if (this.k.s)
/*      */     {
/*  896 */       ba.a("Replay stop: warning: replaying==true");
/*      */     }
/*      */     
/*  899 */     this.b = l.bg;
/*  900 */     this.c = l.bh;
/*  901 */     this.d = this.k.y;
/*  902 */     this.e = this.k.z;
/*      */     
/*  904 */     if (this.b < this.f) {
/*      */       
/*  906 */       l.d("Replay: stoppedFrame<lastCommandFrame: " + this.b + "<" + this.f);
/*  907 */       this.b = this.f;
/*      */     } 
/*      */ 
/*      */     
/*  911 */     this.j = 0L;
/*  912 */     notifyAll();
/*      */   }
/*      */ 
/*      */ 
/*      */   
/*      */   private synchronized strictfp void b() {
/*      */     try {
/*  919 */       if (this.a)
/*      */       {
/*  921 */         wait();
/*      */       }
/*      */     }
/*  924 */     catch (InterruptedException interruptedException) {}
/*      */   }
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   public strictfp void run() {
/*  933 */     l.ag();
/*      */ 
/*      */     
/*  936 */     while (this.a) {
/*      */ 
/*      */ 
/*      */       
/*  940 */       if (this.i.size() > 0) {
/*      */         
/*  942 */         bd bd = this.i.remove();
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */         
/*      */         try {
/*  949 */           if (bd.e != null) {
/*      */             
/*  951 */             this.k.H.e("rc");
/*  952 */             this.k.H.a(bd.a);
/*  953 */             bd.e.a(this.k.H);
/*  954 */             this.k.H.a("rc");
/*      */             
/*  956 */             this.g = bd.a;
/*      */           
/*      */           }
/*  959 */           else if (bd.c != null) {
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */             
/*  968 */             this.k.H.e("cs");
/*  969 */             this.k.H.a(bd.a);
/*  970 */             this.k.H.a(bd.c.longValue());
/*      */             
/*  972 */             this.k.H.a("cs");
/*      */           }
/*  974 */           else if (bd.d != null) {
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */             
/*  980 */             this.k.H.e("wait");
/*  981 */             this.k.H.a(bd.a);
/*  982 */             this.k.H.a("wait");
/*      */ 
/*      */             
/*  985 */             this.k.H.e("es");
/*  986 */             this.k.H.a(bd.a);
/*      */             
/*  988 */             this.k.H.a(bd.d);
/*      */             
/*  990 */             this.k.H.a("es");
/*      */           }
/*  992 */           else if (bd.f != null) {
/*      */ 
/*      */             
/*  995 */             this.k.H.e("wait");
/*  996 */             this.k.H.a(bd.a);
/*  997 */             this.k.H.a("wait");
/*      */ 
/*      */             
/* 1000 */             this.k.H.e("resync");
/* 1001 */             this.k.H.a(bd.a);
/*      */             
/* 1003 */             this.k.H.a(bd.h);
/* 1004 */             this.k.H.a(bd.i);
/*      */             
/* 1006 */             this.k.H.a(bd.j);
/* 1007 */             this.k.H.a(bd.k);
/*      */ 
/*      */ 
/*      */             
/* 1011 */             this.k.H.a(bd.f);
/*      */ 
/*      */             
/* 1014 */             this.k.H.a("resync");
/*      */           
/*      */           }
/* 1017 */           else if (bd.g != null) {
/*      */             
/* 1019 */             this.k.H.e("chat");
/* 1020 */             this.k.H.a(bd.a);
/*      */             
/* 1022 */             this.k.H.a(bd.g.a);
/* 1023 */             this.k.H.b(bd.g.b);
/* 1024 */             this.k.H.b(bd.g.c);
/*      */             
/* 1026 */             this.k.H.a("chat");
/*      */           }
/*      */           else {
/*      */             
/* 1030 */             throw new RuntimeException("Unknown saved command");
/*      */           } 
/*      */ 
/*      */ 
/*      */           
/* 1035 */           if (this.j == 0L || this.j + 3000L < System.currentTimeMillis())
/*      */           {
/* 1037 */             this.j = System.currentTimeMillis();
/*      */             
/* 1039 */             this.k.H.a();
/*      */           }
/*      */         
/*      */         }
/* 1043 */         catch (IOException iOException) {
/*      */ 
/*      */           
/* 1046 */           l l = l.u();
/*      */           
/* 1048 */           l.a("Replay error", iOException);
/*      */           
/* 1050 */           l.bA.e.a("", "IO error recording replay, disabling record");
/*      */           
/* 1052 */           ba.a(this.k, false);
/* 1053 */           this.h = true;
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */           
/*      */           return;
/*      */         } 
/*      */       } 
/*      */ 
/*      */ 
/*      */ 
/*      */       
/* 1066 */       if (this.i.size() == 0)
/*      */       {
/* 1068 */         b();
/*      */       }
/*      */     } 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */     
/*      */     try {
/* 1078 */       this.k.H.e("wait");
/* 1079 */       this.k.H.a(this.b);
/* 1080 */       this.k.H.a("wait");
/*      */ 
/*      */       
/* 1083 */       this.k.H.e("end");
/* 1084 */       this.k.H.a("end");
/*      */ 
/*      */       
/* 1087 */       this.k.H.e("endReplayMetaData");
/* 1088 */       this.k.H.c(0);
/* 1089 */       this.k.H.a(this.b);
/* 1090 */       this.k.H.a(this.c);
/* 1091 */       this.k.H.a(this.d);
/* 1092 */       this.k.H.a(this.e);
/*      */       
/* 1094 */       this.k.H.c("{frames:" + this.b + ",time:" + this.c + ",commandCount:" + this.d + ",resyncCount:" + this.e + "}");
/*      */       
/* 1096 */       this.k.H.a("endReplayMetaData");
/*      */ 
/*      */ 
/*      */       
/* 1100 */       this.k.H.a();
/*      */     }
/* 1102 */     catch (IOException iOException) {
/*      */ 
/*      */       
/* 1105 */       throw new RuntimeException(iOException);
/*      */     } 
/*      */     
/* 1108 */     ba.a("Background writer stopping");
/* 1109 */     ba.a("Remainding commands: " + this.i.size());
/* 1110 */     ba.a("last command: " + this.f);
/* 1111 */     ba.a("last command write: " + this.g);
/*      */     
/* 1113 */     ba.a("Commands issued: " + this.d);
/*      */     
/* 1115 */     this.h = true;
/*      */   }
/*      */ }


/* Location:              D:\Rusted Warfare\Rusted Warfare\game-lib.jar!\com\corrodinggames\rts\gameFramework\bb.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */