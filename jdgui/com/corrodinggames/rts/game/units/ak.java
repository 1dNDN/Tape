/*      */ package com.corrodinggames.rts.game.units;
/*      */ 
/*      */ import com.corrodinggames.rts.game.f;
/*      */ import com.corrodinggames.rts.game.m;
/*      */ import com.corrodinggames.rts.game.units.a.c;
/*      */ import com.corrodinggames.rts.game.units.a.s;
/*      */ import com.corrodinggames.rts.game.units.a.z;
/*      */ import com.corrodinggames.rts.game.units.custom.aj;
/*      */ import com.corrodinggames.rts.game.units.custom.g;
/*      */ import com.corrodinggames.rts.game.units.custom.i;
/*      */ import com.corrodinggames.rts.game.units.custom.l;
/*      */ import com.corrodinggames.rts.gameFramework.e.a;
/*      */ import com.corrodinggames.rts.gameFramework.j.e;
/*      */ import com.corrodinggames.rts.gameFramework.j.l;
/*      */ import com.corrodinggames.rts.gameFramework.l;
/*      */ import java.io.File;
/*      */ import java.util.ArrayList;
/*      */ import java.util.Collections;
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ public enum ak
/*      */   implements al
/*      */ {
/*   73 */   a,
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*  144 */   b,
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*  205 */   c,
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*  263 */   d,
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*  329 */   e,
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*  379 */   f,
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*  423 */   g,
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*  467 */   h,
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*  531 */   i,
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*  566 */   j,
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*  600 */   k,
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*  635 */   l,
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*  670 */   m,
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*  706 */   n,
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*  748 */   o,
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*  783 */   p,
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*  819 */   q,
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*  854 */   r,
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*  896 */   s,
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*  931 */   t,
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*  966 */   u,
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/* 1000 */   v,
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/* 1034 */   w,
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/* 1079 */   x,
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/* 1121 */   y,
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/* 1174 */   z,
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/* 1216 */   A,
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/* 1253 */   B,
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/* 1296 */   C,
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/* 1339 */   D,
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/* 1381 */   E,
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/* 1422 */   F,
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/* 1464 */   G,
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/* 1517 */   H,
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/* 1557 */   I,
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/* 1598 */   J,
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/* 1656 */   K,
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/* 1691 */   L,
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/* 1745 */   M,
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/* 1785 */   N,
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/* 1825 */   O,
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/* 1866 */   P,
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/* 1911 */   Q,
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/* 1956 */   R,
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/* 1991 */   S,
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/* 2027 */   T,
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/* 2068 */   U,
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/* 2109 */   V,
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/* 2150 */   W,
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/* 2189 */   X,
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/* 2229 */   Y;
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   ak() {
/* 2321 */     this.Z = new z(this);
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */     
/* 2328 */     this.aa = -1;
/*      */   }
/*      */   
/*      */   z Z; int aa; String ab; String ac;
/*      */   public static ArrayList ad;
/*      */   
/* 2334 */   public String e() { if (this.aa != a.c || this.ab == null) {
/*      */       
/* 2336 */       this.aa = a.c;
/*      */       
/* 2338 */       String str = "units." + name() + ".name";
/* 2339 */       this.ab = a.a(str, null, new Object[0]);
/*      */       
/* 2341 */       if (this.ab == null) {
/*      */ 
/*      */         
/* 2344 */         if (l.u().ai() && !A())
/*      */         {
/* 2346 */           throw new RuntimeException("Can't find translation text for: " + str);
/*      */         }
/*      */ 
/*      */         
/* 2350 */         this.ab = name();
/*      */       } 
/*      */     } 
/*      */     
/* 2354 */     return this.ab; } am[] ae; public static boolean af; g ag; public af a() {
/*      */     return a(false);
/*      */   } public z d() {
/*      */     return this.Z;
/*      */   } public String f() {
/* 2359 */     if (this.aa != a.c || this.ac == null) {
/*      */       
/* 2361 */       this.aa = a.c;
/*      */ 
/*      */       
/* 2364 */       String str = "units." + name() + ".description";
/* 2365 */       this.ac = a.a(str, null, new Object[0]);
/*      */       
/* 2367 */       if (this.ac == null) {
/*      */         
/* 2369 */         if (l.u().ai() && !A())
/*      */         {
/* 2371 */           throw new RuntimeException("Can't find translation text for: " + str);
/*      */         }
/*      */ 
/*      */         
/* 2375 */         this.ac = "";
/*      */       } 
/*      */     } 
/*      */ 
/*      */     
/* 2380 */     return this.ac;
/*      */   }
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   public int g() {
/* 2407 */     return 1;
/*      */   }
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   public void a(ArrayList paramArrayList, int paramInt) {}
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   public void h() {
/* 2427 */     am[] arrayOfAm = new am[3];
/* 2428 */     for (byte b = 1; b <= 3; b++) {
/*      */       
/* 2430 */       am am1 = new am();
/* 2431 */       a(am1.a, b);
/*      */ 
/*      */ 
/*      */       
/* 2435 */       arrayOfAm[b - 1] = am1;
/*      */     } 
/*      */     
/* 2438 */     this.ae = arrayOfAm;
/*      */   }
/*      */ 
/*      */ 
/*      */   
/*      */   public ArrayList a(int paramInt) {
/* 2444 */     if (paramInt > 3)
/*      */     {
/* 2446 */       throw new RuntimeException("Tech level:" + paramInt + " greater than maxTechLevel");
/*      */     }
/* 2448 */     return (this.ae[paramInt - 1]).a;
/*      */   }
/*      */ 
/*      */   
/*      */   public String i() {
/* 2453 */     return name();
/*      */   }
/*      */ 
/*      */ 
/*      */   
/*      */   public boolean j() {
/* 2459 */     return false;
/*      */   }
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   public boolean k() {
/* 2479 */     return j();
/*      */   }
/*      */ 
/*      */ 
/*      */   
/*      */   public boolean l() {
/* 2485 */     return false;
/*      */   }
/*      */ 
/*      */ 
/*      */   
/*      */   public boolean m() {
/* 2491 */     return false;
/*      */   }
/*      */ 
/*      */ 
/*      */   
/*      */   public boolean n() {
/* 2497 */     return false;
/*      */   }
/*      */ 
/*      */ 
/*      */   
/*      */   public ah o() {
/* 2503 */     af af = af.a(this);
/* 2504 */     if (af == null)
/*      */     {
/* 2506 */       throw new RuntimeException("Shared unit is null for:" + name());
/*      */     }
/* 2508 */     return af.h();
/*      */   }
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   public boolean p() {
/* 2515 */     return false;
/*      */   }
/*      */ 
/*      */ 
/*      */   
/*      */   public aj q() {
/* 2521 */     return null;
/*      */   }
/*      */ 
/*      */ 
/*      */   
/*      */   public static al a(String paramString) {
/* 2527 */     return a(paramString, true);
/*      */   }
/*      */ 
/*      */   
/*      */   public static al a(String paramString, boolean paramBoolean) {
/* 2532 */     if (paramBoolean) {
/*      */       
/* 2534 */       al al1 = l.k(paramString);
/* 2535 */       if (al1 != null)
/*      */       {
/* 2537 */         return al1;
/*      */       }
/*      */     } 
/*      */     
/* 2541 */     for (ak ak1 : values()) {
/*      */       
/* 2543 */       if (ak1.name().equalsIgnoreCase(paramString))
/*      */       {
/* 2545 */         return ak1;
/*      */       }
/*      */     } 
/*      */     
/* 2549 */     l l = l.l(paramString);
/* 2550 */     if (l != null)
/*      */     {
/* 2552 */       return (al)l;
/*      */     }
/*      */     
/* 2555 */     return null;
/*      */   }
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   private static String a(String paramString, float paramFloat) {
/* 2641 */     return a(paramString, paramFloat, "");
/*      */   }
/*      */   
/*      */   private static String a(String paramString1, float paramFloat, String paramString2) {
/* 2645 */     String str = "" + paramFloat;
/*      */     
/* 2647 */     if (paramFloat % 1.0F == 0.0F)
/*      */     {
/* 2649 */       str = "" + (int)paramFloat;
/*      */     }
/*      */     
/* 2652 */     return a(paramString1, str, paramString2);
/*      */   }
/*      */ 
/*      */ 
/*      */   
/*      */   private static String a(String paramString1, String paramString2, String paramString3) {
/* 2658 */     return paramString1 + ": " + paramString2 + paramString3 + "\n";
/*      */   }
/*      */ 
/*      */   
/*      */   private static int a(r paramr) {
/* 2663 */     c c = paramr.bX();
/* 2664 */     if (c != null) {
/*      */       
/* 2666 */       s s = paramr.a(c);
/* 2667 */       if (s != null)
/*      */       {
/* 2669 */         return s.c();
/*      */       }
/*      */     } 
/* 2672 */     return 0;
/*      */   }
/*      */ 
/*      */   
/*      */   public static void r() {
/* 2677 */     String str = "output_all_unit_images/";
/*      */     
/* 2679 */     (new File(str)).mkdirs();
/*      */     
/* 2681 */     for (byte b = 0; b < 50; b++)
/*      */     {
/* 2683 */       l.a("running outputUnitImages()");
/*      */     }
/*      */ 
/*      */ 
/*      */ 
/*      */     
/* 2689 */     String[] arrayOfString = { "carrier", "experimentalGunship", "experimentalGunshipLanded", "mech_gun", "ladybug", "spiderBot", "wall_v", "crystalResource", "test_tank", "missing", "fogRevealer", "supplyDepot", "tankDestroyer", "megaTank", "crystal_mid", "mechFlyingLanded" };
/*      */ 
/*      */     
/* 2692 */     for (al al1 : ad) {
/*      */       
/* 2694 */       af af = af.a(al1);
/* 2695 */       if (af instanceof r) {
/*      */         
/* 2697 */         if (al1.i().startsWith("bug")) {
/*      */           continue;
/*      */         }
/*      */ 
/*      */         
/* 2702 */         al al2 = l.c(al1);
/* 2703 */         if (al2 != null) {
/*      */           continue;
/*      */         }
/*      */ 
/*      */         
/* 2708 */         if (al1 instanceof l)
/*      */         {
/* 2710 */           if (!((l)al1).au) {
/*      */             continue;
/*      */           }
/*      */         }
/*      */ 
/*      */ 
/*      */         
/* 2717 */         r r = (r)af;
/* 2718 */         boolean bool1 = false;
/* 2719 */         for (String str2 : arrayOfString) {
/*      */           
/* 2721 */           if (str2.equals(al1.i()))
/*      */           {
/* 2723 */             bool1 = true;
/*      */           }
/*      */         } 
/* 2726 */         if (bool1) {
/*      */           continue;
/*      */         }
/*      */ 
/*      */         
/* 2731 */         String str1 = str + al1.i().replace("/", "_").replace("\\", "_") + ".png";
/*      */ 
/*      */ 
/*      */         
/* 2735 */         l l = l.u();
/*      */ 
/*      */         
/* 2738 */         byte b1 = 100;
/*      */         
/* 2740 */         e e = l.bw.b(b1, b1, true);
/*      */         
/* 2742 */         l l1 = l.bw.a(e);
/*      */         
/* 2744 */         l l2 = l.bw;
/*      */         
/* 2746 */         l.bw = l1;
/*      */ 
/*      */         
/* 2749 */         float f1 = 0.0F;
/* 2750 */         float f2 = 0.0F;
/* 2751 */         m m = m.n(0);
/*      */ 
/*      */         
/* 2754 */         boolean bool2 = false;
/* 2755 */         boolean bool3 = false;
/* 2756 */         boolean bool4 = true;
/* 2757 */         boolean bool5 = true;
/*      */ 
/*      */         
/* 2760 */         a(al1, e.m, e.n, f1, f2, m, 20.0F, b1, bool2, bool3, bool4, bool5);
/*      */ 
/*      */         
/* 2763 */         l.bw = l2;
/*      */         
/* 2765 */         l1.m();
/*      */ 
/*      */         
/* 2768 */         l.bw.a(e, new File(str1));
/*      */       } 
/*      */     } 
/*      */   }
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   public static void s() {
/* 2780 */     for (byte b = 0; b < 50; b++)
/*      */     {
/* 2782 */       l.a("running printForHelp()");
/*      */     }
/*      */ 
/*      */ 
/*      */ 
/*      */     
/* 2788 */     String[] arrayOfString = { "carrier", "experimentalGunship", "experimentalGunshipLanded", "mech_gun", "ladybug", "spiderBot", "wall_v", "crystalResource", "test_tank", "missing", "fogRevealer", "supplyDepot", "tankDestroyer", "megaTank", "crystal_mid", "mechFlyingLanded" };
/*      */ 
/*      */     
/* 2791 */     String str = "";
/*      */     
/* 2793 */     ArrayList<?> arrayList = new ArrayList();
/*      */     
/* 2795 */     arrayList.addAll(ad);
/*      */     
/* 2797 */     Collections.sort(arrayList, new ak$48());
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */     
/* 2816 */     for (al al1 : arrayList) {
/*      */       
/* 2818 */       af af = af.a(al1);
/* 2819 */       if (af instanceof r) {
/*      */         
/* 2821 */         if (al1.i().startsWith("bug")) {
/*      */           continue;
/*      */         }
/*      */ 
/*      */         
/* 2826 */         al al2 = l.c(al1);
/* 2827 */         if (al2 != null) {
/*      */           continue;
/*      */         }
/*      */ 
/*      */         
/* 2832 */         if (al1 instanceof l)
/*      */         {
/* 2834 */           if (!((l)al1).au) {
/*      */             continue;
/*      */           }
/*      */         }
/*      */ 
/*      */         
/* 2840 */         if (al1 == Y) {
/*      */           continue;
/*      */         }
/*      */ 
/*      */         
/* 2845 */         r r = (r)af;
/* 2846 */         boolean bool = false;
/* 2847 */         for (String str1 : arrayOfString) {
/*      */           
/* 2849 */           if (str1.equals(al1.i()))
/*      */           {
/* 2851 */             bool = true;
/*      */           }
/*      */         } 
/* 2854 */         if (bool) {
/*      */           continue;
/*      */         }
/*      */         
/* 2858 */         str = str + "\n";
/* 2859 */         str = str + "<div class=\"unit\">\n";
/* 2860 */         str = str + "<img src=\"unit:" + al1.i() + "\" />\n";
/* 2861 */         str = str + "<h4>" + al1.e() + "</h4>\n";
/* 2862 */         str = str + "<p>" + al1.f().replace("\n", "<br/>") + "</p>\n";
/* 2863 */         str = str + "<pre>";
/* 2864 */         str = str + a("Price", "$" + al1.c(), "");
/*      */         
/* 2866 */         int i = a(r);
/* 2867 */         if (i > 0) {
/*      */           
/* 2869 */           str = str + a("T2 Upgrade Price", "$" + i, "");
/*      */           
/* 2871 */           r r1 = (r)al1.a();
/* 2872 */           r1.a(2);
/* 2873 */           if (r1.T() == 2) {
/*      */             
/* 2875 */             int j = a(r1);
/* 2876 */             if (j > 0)
/*      */             {
/* 2878 */               str = str + a("T3 Upgrade Price", "$" + j, "");
/*      */             }
/*      */           } 
/*      */         } 
/*      */ 
/*      */ 
/*      */         
/* 2885 */         str = str + a("Hp", r.bZ);
/* 2886 */         str = str + a("Speed", r.z());
/*      */         
/* 2888 */         str = str + a("Turn speed", r.A());
/*      */         
/* 2890 */         str = str + a("Mass", r.bB());
/*      */         
/* 2892 */         if (r.l()) {
/*      */           
/* 2894 */           str = str + a("Shoot Delay", r.b(0));
/* 2895 */           str = str + a("Attack Range", r.m());
/*      */           
/* 2897 */           float f1 = 0.0F;
/* 2898 */           float f2 = 0.0F;
/*      */           
/* 2900 */           float f3 = 0.0F;
/* 2901 */           float f4 = 0.0F;
/*      */           
/* 2903 */           int j = r.bg();
/* 2904 */           for (byte b1 = 0; b1 < j; b1++) {
/*      */ 
/*      */             
/* 2907 */             int k = f.a.a;
/*      */             
/* 2909 */             r.a(r, b1);
/*      */             
/* 2911 */             if (k != f.a.a) {
/*      */ 
/*      */ 
/*      */ 
/*      */               
/* 2916 */               f f = (f)f.a.get(f.a.a - 1);
/*      */ 
/*      */               
/* 2919 */               if (f.U > f1)
/*      */               {
/* 2921 */                 f1 = f.U;
/*      */               }
/*      */               
/* 2924 */               if (f.Y > f2)
/*      */               {
/* 2926 */                 f2 = f.Y;
/*      */               }
/*      */               
/* 2929 */               f3 += f.U;
/* 2930 */               f4 += f.Y;
/*      */             } 
/*      */           } 
/* 2933 */           if (f3 != 0.0F) {
/*      */ 
/*      */             
/* 2936 */             String str1 = "";
/* 2937 */             if (f3 != f1)
/*      */             {
/* 2939 */               str1 = " (total:" + f3 + ")";
/*      */             }
/* 2941 */             str = str + a("Direct Damage", f1, str1);
/*      */           } 
/* 2943 */           if (f4 != 0.0F) {
/*      */             
/* 2945 */             String str1 = "";
/* 2946 */             if (f4 != f2)
/*      */             {
/* 2948 */               str1 = " (total:" + f4 + ")";
/*      */             }
/* 2950 */             str = str + a("Area Damage", f2, str1);
/*      */           } 
/*      */         } 
/*      */ 
/*      */         
/* 2955 */         str = str + "</pre>";
/*      */         
/* 2957 */         str = str + "</div>\n";
/*      */       } 
/*      */     } 
/*      */ 
/*      */ 
/*      */     
/* 2963 */     l.d(str);
/*      */   }
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   public static void t() {
/* 2972 */     for (ak ak1 : values()) {
/*      */ 
/*      */       
/* 2975 */       ak1.name();
/* 2976 */       ak1.e();
/* 2977 */       ak1.f();
/*      */     } 
/*      */   }
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   public static boolean a(al paramal, float paramFloat1, float paramFloat2, float paramFloat3, float paramFloat4, m paramm) {
/* 2987 */     l l = l.u();
/* 2988 */     af af = af.a(paramal);
/*      */     
/* 2990 */     if (af == null) {
/*      */       
/* 2992 */       l.d("isValidHere: Failed to get unit from type:" + paramal);
/* 2993 */       return false;
/*      */     } 
/*      */     
/* 2996 */     af.a(paramm);
/* 2997 */     af.dJ = paramFloat4;
/* 2998 */     af.dH = paramFloat1;
/* 2999 */     af.dI = paramFloat2;
/*      */     
/* 3001 */     if (!af.bw()) {
/*      */       
/* 3003 */       af.bL = paramFloat3;
/* 3004 */       if (af instanceof r) {
/*      */         
/* 3006 */         r r = (r)af;
/* 3007 */         r.j(paramFloat3);
/*      */       } 
/*      */     } 
/*      */     
/* 3011 */     boolean bool = true;
/*      */     
/* 3013 */     if (af instanceof r) {
/*      */       
/* 3015 */       r r = (r)af;
/* 3016 */       bool = r.bn();
/*      */     } 
/*      */     
/* 3019 */     af.dJ = 0.0F;
/* 3020 */     af.bL = 0.0F;
/*      */     
/* 3022 */     return bool;
/*      */   }
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   public static void a(al paramal, float paramFloat1, float paramFloat2, float paramFloat3, float paramFloat4, m paramm, float paramFloat5, float paramFloat6, boolean paramBoolean1, boolean paramBoolean2, int paramInt) {
/* 3031 */     boolean bool = true;
/* 3032 */     a(paramal, paramFloat1, paramFloat2, paramFloat3, paramFloat4, paramm, paramFloat5, paramFloat6, paramBoolean1, paramBoolean2, paramInt, bool);
/*      */   }
/*      */ 
/*      */ 
/*      */   
/*      */   public static void a(al paramal, float paramFloat1, float paramFloat2, float paramFloat3, float paramFloat4, m paramm, float paramFloat5, float paramFloat6, boolean paramBoolean1, boolean paramBoolean2, int paramInt, boolean paramBoolean3) {
/* 3038 */     l l = l.u();
/*      */     
/* 3040 */     af af = af.c(paramal);
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */     
/* 3048 */     boolean bool1 = af.bw();
/*      */     
/* 3050 */     af.a(paramm);
/* 3051 */     if (af instanceof r) {
/*      */       
/* 3053 */       r r = (r)af;
/* 3054 */       r.a(paramInt);
/*      */     } 
/*      */     
/* 3057 */     af.dJ = paramFloat4;
/*      */     
/* 3059 */     if (af.h() == ah.f || af
/* 3060 */       .h() == ah.g || af
/* 3061 */       .h() == ah.h)
/*      */     {
/* 3063 */       af.dJ += 4.0F;
/*      */     }
/*      */     
/* 3066 */     if (af.h() == ah.d)
/*      */     {
/* 3068 */       af.dJ += 10.0F;
/*      */     }
/*      */     
/* 3071 */     if (!bool1) {
/*      */       
/* 3073 */       af.bL = paramFloat3;
/* 3074 */       if (af instanceof r)
/*      */       {
/* 3076 */         r r = (r)af;
/* 3077 */         r.j(paramFloat3);
/*      */       }
/*      */     
/*      */     } else {
/*      */       
/* 3082 */       af.bL = -90.0F;
/*      */     } 
/*      */ 
/*      */ 
/*      */ 
/*      */     
/* 3088 */     boolean bool = true;
/*      */     
/* 3090 */     boolean bool2 = af.bT;
/*      */     
/* 3092 */     af.bT = true;
/* 3093 */     af.bW = false;
/* 3094 */     af.bX = false;
/*      */     
/* 3096 */     if (!paramBoolean3)
/*      */     {
/* 3098 */       af.bX = true;
/*      */     }
/*      */ 
/*      */     
/* 3102 */     af.bS = false;
/*      */     
/* 3104 */     af.bU = false;
/* 3105 */     af.bV = false;
/*      */ 
/*      */ 
/*      */     
/* 3109 */     if (paramBoolean1 || paramBoolean2) {
/*      */ 
/*      */ 
/*      */       
/* 3113 */       af.bU = paramBoolean2;
/* 3114 */       af.bV = paramBoolean1;
/*      */       
/* 3116 */       bool = false;
/*      */     
/*      */     }
/*      */     else {
/*      */ 
/*      */       
/* 3122 */       af.bS = true;
/*      */     } 
/*      */ 
/*      */     
/* 3126 */     if (!bool) {
/*      */       
/* 3128 */       af.dH = paramFloat1;
/* 3129 */       af.dI = paramFloat2;
/*      */ 
/*      */     
/*      */     }
/*      */     else {
/*      */ 
/*      */       
/* 3136 */       af.dH = l.cd + paramFloat1;
/* 3137 */       af.dI = l.ce + paramFloat2;
/*      */     } 
/*      */ 
/*      */ 
/*      */     
/* 3142 */     float f1 = af.bO * 2.0F * 0.8F;
/*      */     
/* 3144 */     if (af instanceof r) {
/*      */       
/* 3146 */       r r = (r)af;
/* 3147 */       if (r.D != null) {
/*      */ 
/*      */ 
/*      */         
/* 3151 */         float f = r.dM * r.cn();
/*      */ 
/*      */         
/* 3154 */         if (f > f1)
/*      */         {
/* 3156 */           f1 = f;
/*      */         }
/*      */       } 
/*      */     } 
/*      */     
/* 3161 */     float f2 = 1.0F;
/*      */     
/* 3163 */     if (f1 < paramFloat5)
/*      */     {
/* 3165 */       f2 = paramFloat5 / f1;
/*      */     }
/*      */     
/* 3168 */     if (f1 > paramFloat6)
/*      */     {
/* 3170 */       f2 = paramFloat6 / f1;
/*      */     }
/*      */ 
/*      */     
/* 3174 */     l.bw.j();
/*      */     
/* 3176 */     if (bool);
/*      */ 
/*      */ 
/*      */ 
/*      */     
/* 3181 */     if (f2 != 1.0F)
/*      */     {
/*      */       
/* 3184 */       l.bw.a(f2, f2, paramFloat1, paramFloat2);
/*      */     }
/*      */ 
/*      */ 
/*      */ 
/*      */     
/* 3190 */     if (f2 < 1.0F) {
/*      */       
/* 3192 */       af = true;
/*      */     }
/*      */     else {
/*      */       
/* 3196 */       af = false;
/*      */     } 
/*      */     
/* 3199 */     af.d(0.0F);
/* 3200 */     af.c(0.0F);
/* 3201 */     af.a(0.0F, false);
/*      */ 
/*      */ 
/*      */     
/* 3205 */     l.bw.k();
/*      */ 
/*      */ 
/*      */ 
/*      */     
/* 3210 */     af.dJ = 0.0F;
/*      */     
/* 3212 */     if (!bool1) {
/*      */       
/* 3214 */       af.bL = 0.0F;
/*      */     }
/*      */     else {
/*      */       
/* 3218 */       af.bL = -90.0F;
/*      */     } 
/*      */     
/* 3221 */     if (af instanceof r) {
/*      */       
/* 3223 */       r r = (r)af;
/* 3224 */       r.j(0.0F);
/*      */       
/* 3226 */       r.a(1);
/*      */     } 
/*      */ 
/*      */ 
/*      */     
/* 3231 */     af.bU = false;
/* 3232 */     af.bV = false;
/* 3233 */     af.bT = bool2;
/* 3234 */     af.bS = false;
/*      */   }
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   public int b(int paramInt) {
/* 3243 */     int i = c();
/* 3244 */     if (paramInt >= 2)
/*      */     {
/* 3246 */       i += c(2);
/*      */     }
/* 3248 */     if (paramInt >= 3)
/*      */     {
/* 3250 */       i += c(2);
/*      */     }
/* 3252 */     return i;
/*      */   }
/*      */   
/*      */   public int c(int paramInt) {
/* 3256 */     return 0;
/*      */   }
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   public g u() {
/* 3266 */     int i = c();
/*      */     
/* 3268 */     if (i == 0)
/*      */     {
/* 3270 */       return g.a;
/*      */     }
/*      */     
/* 3273 */     if (this.ag == null || this.ag.a() != i)
/*      */     {
/* 3275 */       this.ag = g.a(i);
/*      */     }
/* 3277 */     return this.ag;
/*      */   }
/*      */ 
/*      */ 
/*      */   
/*      */   public g d(int paramInt) {
/* 3283 */     int i = b(paramInt);
/* 3284 */     return g.a(i);
/*      */   }
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   public String v() {
/* 3292 */     return name();
/*      */   }
/*      */ 
/*      */ 
/*      */   
/*      */   public boolean w() {
/* 3298 */     return false;
/*      */   }
/*      */ 
/*      */ 
/*      */   
/*      */   public i x() {
/* 3304 */     return null;
/*      */   }
/*      */ 
/*      */ 
/*      */   
/*      */   public boolean y() {
/* 3310 */     return true;
/*      */   }
/*      */ 
/*      */ 
/*      */   
/*      */   public e z() {
/* 3316 */     return null;
/*      */   }
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   public int a(af paramaf) {
/* 3328 */     return 0;
/*      */   }
/*      */ 
/*      */   
/*      */   public boolean A() {
/* 3333 */     return false;
/*      */   }
/*      */   
/*      */   public abstract af a(boolean paramBoolean);
/*      */   
/*      */   public abstract void b();
/*      */   
/*      */   public abstract int c();
/*      */ }


/* Location:              D:\Rusted Warfare\Rusted Warfare\game-lib.jar!\com\corrodinggames\rts\gam\\units\ak.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */